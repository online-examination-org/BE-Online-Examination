name: Build and Deploy to Render

on:
  push:
    branches:
      - main  # Trigger on push to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build project with Maven
        run: mvn clean package
        working-directory: ./online-examination  # Adjust path as necessary

      - name: Build Docker image
        run: docker build -t hungvo2003vn/online-examination:latest .
        working-directory: ./online-examination  # Adjust path as necessary

      - name: Push Docker image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push hungvo2003vn/online-examination:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Render
        id: deploy_step
        run: |
          DEPLOY_RESPONSE=$(curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "clearCache": "clear",
              "imageUrl": "docker.io/hungvo2003vn/online-examination:latest"
            }' \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys)

          # Extract deployment ID from the response
          DEPLOY_ID=$(echo "$DEPLOY_RESPONSE" | jq -r '.id')
          echo "Deployment ID: $DEPLOY_ID"
          echo "::set-output name=deploy_id::$DEPLOY_ID"

      - name: Check Deployment Status
        run: |
          STATUS="update_in_progress"
          FINISHED_AT=null

          while [[ "$STATUS" == "update_in_progress" || "$STATUS" == "build_in_progress" || "$STATUS" == "pre_deploy_in_progress" ]] && [ "$FINISHED_AT" == "null" ]; do
            sleep 10
            STATUS_RESPONSE=$(curl -s -X GET \
              -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
              https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys/${{ steps.deploy_step.outputs.deploy_id }})

            STATUS=$(echo "$STATUS_RESPONSE" | jq -r '.status')
            FINISHED_AT=$(echo "$STATUS_RESPONSE" | jq -r '.finishedAt')
            echo "Current Status: $STATUS"
          done

          if [ "$STATUS" == "live" ]; then
            echo "Deployment completed successfully and is now live."
          elif [[ "$STATUS" == "build_failed" || "$STATUS" == "update_failed" || "$STATUS" == "pre_deploy_failed" ]]; then
            echo "Deployment failed with status: $STATUS"
            exit 1
          else
            echo "Deployment finished with unexpected status: $STATUS"
            exit 1
          fi
  
